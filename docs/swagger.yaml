basePath: /
definitions:
  api.errorResp:
    properties:
      error:
        type: string
      request_id:
        type: string
    type: object
  api.makeOrderBody:
    properties:
      action:
        allOf:
        - $ref: '#/definitions/models.OrderAction'
        example: buy
      amount:
        example: 100
        minimum: 1
        type: integer
      price:
        example: 10
        minimum: 1
        type: integer
    required:
    - action
    - amount
    - price
    type: object
  api.pageResp:
    properties:
      data: {}
      next:
        example: next cursor value
        type: string
    type: object
  api.takeOrderBody:
    properties:
      action:
        allOf:
        - $ref: '#/definitions/models.OrderAction'
        description: FIXME:user_id should be retrieved from the user's jwt token
        example: buy
      amount:
        example: 100
        minimum: 1
        type: integer
    required:
    - action
    - amount
    type: object
  models.Order:
    properties:
      action:
        allOf:
        - $ref: '#/definitions/models.OrderAction'
        example: buy
      amount:
        example: 100
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: uuid
        type: string
      price:
        description: using int instead of float64 to avoid floating point precision
          issue
        example: 10
        type: integer
    type: object
  models.OrderAction:
    enum:
    - buy
    - sell
    type: string
    x-enum-varnames:
    - Buy
    - Sell
  models.OrderBoardType:
    enum:
    - live
    - history
    - removed
    type: string
    x-enum-varnames:
    - Live
    - History
    - Removed
host: kickstart.gcp_project_name.tw
info:
  contact: {}
  description: |-
    This service provides message broadcasting service for official accounts,
    it also supports audience filtering and performance reporting.
  title: Order (aka Broadcast Service) API
  version: v1
paths:
  /orders:
    delete:
      description: Delete a order
      parameters:
      - description: ID of order
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResp'
      security:
      - Bearer: []
      summary: Delete a order
      tags:
      - order
    get:
      description: Get a order board
      parameters:
      - description: |-
          FIXME: add pagination with var below
          pageReq
          if true, return orders created by the user
        enum:
        - live
        - history
        - removed
        in: query
        name: board_type
        type: string
        x-enum-varnames:
        - Live
        - History
        - Removed
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.pageResp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Order'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResp'
      security:
      - Bearer: []
      summary: Get a order board
      tags:
      - order
    patch:
      description: Take a order
      parameters:
      - description: order id to attend and user's email
        in: body
        name: jsonBody
        required: true
        schema:
          $ref: '#/definitions/api.takeOrderBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResp'
      security:
      - Bearer: []
      summary: Take a order
      tags:
      - order
    post:
      description: Make a order
      parameters:
      - description: order id to attend and user's email
        in: body
        name: jsonBody
        required: true
        schema:
          $ref: '#/definitions/api.makeOrderBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResp'
      security:
      - Bearer: []
      summary: Make a order
      tags:
      - order
schemes:
- http
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
