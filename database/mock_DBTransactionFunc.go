// Code generated by mockery v2.41.0. DO NOT EDIT.

package database

import (
	sqlx "github.com/jmoiron/sqlx"
	mock "github.com/stretchr/testify/mock"
)

// MockDBTransactionFunc is an autogenerated mock type for the DBTransactionFunc type
type MockDBTransactionFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: tx
func (_m *MockDBTransactionFunc) Execute(tx *sqlx.Tx) error {
	ret := _m.Called(tx)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*sqlx.Tx) error); ok {
		r0 = rf(tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockDBTransactionFunc creates a new instance of MockDBTransactionFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDBTransactionFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDBTransactionFunc {
	mock := &MockDBTransactionFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
